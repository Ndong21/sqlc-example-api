name: CI in action

on:
  # Triggers the workflow on push or pull request events
  push:
    branches:
      - 'main'  # Triggers on push to the main branch
  pull_request:
    branches:
      - 'main'  # Triggers on pull request to the main branch
    types:
      - opened

# This workflow has 4 jobs
jobs:

  # This job checks for vulnerability using GitHub Actions from the market place 
  govulncheck:
    runs-on: ubuntu-latest

    # The name of the job
    name: Run govulncheck

    # Steps that will execute as part of the job
    steps:
      - id: govulncheck
        uses: golang/govulncheck-action@v1
        
  # This job checks for code quality using golangci-lint  
  
  golangci:
    name: lint
    runs-on: ubuntu-latest

    #steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4
      # - uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7


  test_app:
    runs-on: ubuntu-latest
    name: Run tests
    
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      # - name: Set up Go
        # uses: actions/setup-go@v5
        with:
          go-version: '1.23.3'
          
      - name: Run tests
        run: go test ./...

  build:
    runs-on: ubuntu-latest # Run this job on the latest Ubuntu VM that GitHub provides
    name: Run Build # A readable name shown in the Actions UI

    needs: [govulncheck, test_app] #This job will only run after govulncheck and test_app jobs succeed 
    
    steps:
      - name: checkout code
        uses: actions/checkout@v4 # Pulls your repository code into the runner so you can build/test it
  
      - name: Set up Go
        uses: actions/setup-go@v5 # Installs and configures the Go environment on the runner
        with:
          go-version: '1.23.3' #Go version for the project
          
      - name: Run build
        run: go build -o ./bin/api ./cmd/api/... # Compiles Go code under ./cmd/api/ and outputs the binary to ./bin/api
      # './...' means "recursively include all Go files under the directory"
        
        
      

        
        
